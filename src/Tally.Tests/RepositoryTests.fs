module Tally.Tests.RepositoryTests

open NUnit.Framework
open Tally
open DataAccess
open System.IO
open Infrastructure
open Consensus
open Consensus.Serialization.Serialization
open Types
open Tally.Tests.VotingContractCode


let difficulty = 0x20fffffful

let result = new Infrastructure.Result.ResultBuilder<string>()
let chainParams = Chain.testParameters

let votingContractId = chainParams.cgpContractId 

let allocationTx1 =
    Transaction.fromHex "000000000101dbb185bc7fd184e17dc125896c65b0a172fedeba46a7ea33d7bc89cc5b2e42310002022017ba8c88eb030b31a0da51ec5fe7bbd08ff807943f57b4cc4a33de4aca37fca6007e0000012a05f1ff01000000010002016203032229522443cf166e28468c58a4719ce01eb2d9b5b656ecae6e959001bbe8c469c853b2554966ecea544810d513e5d6467def1702adaa23b2649c9d9b0a9c07941f489020bdb71124bbe1b836a6ca334b0b57c21e7752b2564eeb91bbbef8ef0d02816200abbf8805a203197e4ad548e4eaa2b16f683c013e31d316f387ecf7adc65b3fb20a416c6c6f636174696f6e010c02095369676e61747572650c02423033323232393532323434336366313636653238343638633538613437313963653031656232643962356236353665636165366539353930303162626538633436390949c52fc98d2bcde388ef24a74ce6e6f0f224b2698a742ecae798fb857e285b561246e608ab6bc8f2d574feca49be5103de52d6b536c9b3440e97bc6b400e26c8423033633237643633613761396532633835326237366165653338663531656464303766303839613533663433623038376565353738313161626636316231393862390950877801f921df81b93bb4b9ae6798b9e1694b74dc64e2f7c12bdfe46510484e2065128be4597431459a050ff171aab534570008c5c46bb45d7191a8c788d9bb0a416c6c6f636174696f6e0604303130360301020000000000000000000005"
    |> Option.get
    |> Transaction.toExtended
let allocationTx2DATAString =
    Transaction.fromHex "000000000101eca1b2200b7eadd2f63d5488be1c0bfca38f77cde2ef04dbf00db7bd9caee8490002022017ba8c88eb030b31a0da51ec5fe7bbd08ff807943f57b4cc4a33de4aca37fca6007e0000012a05f1fe0100000001000201620303c27d63a7a9e2c852b76aee38f51edd07f089a53f43b087ee57811abf61b198b9deeb2058491aad8d8af87bc73ad060eb42c2786753072bf742b3c30c3a98cfca5687ce60e50f2e20f251fb27d4c7989d00b7e265bc543a5fc276e821140dcb0502816a00abbf8805a203197e4ad548e4eaa2b16f683c013e31d316f387ecf7adc65b3fb20a416c6c6f636174696f6e010c02095369676e61747572650c02423033323232393532323434336366313636653238343638633538613437313963653031656232643962356236353665636165366539353930303162626538633436390949c52fc98d2bcde388ef24a74ce6e6f0f224b2698a742ecae798fb857e285b561246e608ab6bc8f2d574feca49be5103de52d6b536c9b3440e97bc6b400e26c8423033633237643633613761396532633835326237366165653338663531656464303766303839613533663433623038376565353738313161626636316231393862390950877801f921df81b93bb4b9ae6798b9e1694b74dc64e2f7c12bdfe46510484e2065128be4597431459a050ff171aab534570008c5c46bb45d7191a8c788d9bb0a416c6c6f636174696f6e060c3036303433303331333033360301020000000000000000000005"
    |> Option.get
    |> Transaction.toExtended
let payoutTx =
    Transaction.fromHex "000000000101defeb60a70adf39e4f17432abfa39d77c30d87e5f0d359f4dcf6c1c33cfe5d7b0002022017ba8c88eb030b31a0da51ec5fe7bbd08ff807943f57b4cc4a33de4aca37fca6007e0000012a061b4201000000010002016203032229522443cf166e28468c58a4719ce01eb2d9b5b656ecae6e959001bbe8c469471d6a204ba696b66a15ba4a08cc5698a4ebaa409444cd7f21df6ec145167b825a279f17af3689d9cd956673b41e5d089a7606fac5d604c4c52c504bf609dd4802822200abbf8805a203197e4ad548e4eaa2b16f683c013e31d316f387ecf7adc65b3fb2065061796f7574010c02065061796f7574064c30323031333434646333343366306163366430643164356436653633383861396463343935666632333062363530353635343535663034306334616264353635633164333031303030303666095369676e61747572650c0242303332323239353232343433636631363665323834363863353861343731396365303165623264396235623635366563616536653935393030316262653863343639099c96d9e2382e67426f03e49e2d84a5c18293e783b508c130c23ae17556d9f0306cb69ab49f62f9f92a3c140c19d9ec89733ed0b84bfd5d86bdfc769cb34026c642303363323764363361376139653263383532623736616565333866353165646430376630383961353366343362303837656535373831316162663631623139386239092ca4cc636f5aba77f0a1c9c0b4d75a271428b36e219faaa95b12ee155c64f56f4672cc8ca7abc659afc7ea88f2115f625e22ab6207fa0ca5b65959e1a0e953300301020000000000000000000005"
    |> Option.get
    |> Transaction.toExtended
let RpayoutTx =
    Transaction.fromHex "000000000101da0ac18d47e306668e2e727b4c75e1aa06932279f4c264740647f6b13b9189840002022017ba8c88eb030b31a0da51ec5fe7bbd08ff807943f57b4cc4a33de4aca37fca6007e0000012a05f36501000000010002016203032229522443cf166e28468c58a4719ce01eb2d9b5b656ecae6e959001bbe8c469625925d8ec444d8aced89c4788b4d79bed98f1e61808c52e1ef3b935af03c3890b7e4f072fdc4cc400074c6c07432d5339edab8c9e5df87869d0c0ff58d1237e02822200abbf8805a203197e4ad548e4eaa2b16f683c013e31d316f387ecf7adc65b3fb2065061796f7574010c02065061796f7574064c30323031333434646333343366306163366430643164356436653633383861396463343935666632333062363530353635343535663034306334616264353635633164333031303030303739095369676e61747572650c024230333232323935323234343363663136366532383436386335386134373139636530316562326439623562363536656361653665393539303031626265386334363909926297b3380edb926c2fbbd0859505c9a5df5e9768c7ccdbc42aa87c6f8b811136dedd6c2cbe8f35a637d196aa7fec9d0702faa7c930cf6b9335451c262815d54230336332376436336137613965326338353262373661656533386635316564643037663038396135336634336230383765653537383131616266363162313938623909e69297290dca83b6624a875265b0a2878267486131d080f6c6f71e1233f7d2ae02184861fd7b0782929c6e45f1c2007b3c5acaf2721d072f6b157fd7ebfc413d0301020000000000000000000005"
    |> Option.get
    |> Transaction.toExtended

let hashPayout = "44a69664aa2096a51e093f7ec7fb7840c570cd7ba1f86f1e67dbf0b1d34b2f17"

[<Test>]
let ``add block in repository `` () =
    let tempDir () =
        Path.Combine
            [| Path.GetTempPath(); Path.GetRandomFileName() |]

    let dataPath = tempDir()
    let databaseContext = DataAccess.createContext dataPath
    let dataAccess = DataAccess.init databaseContext
    use session = DatabaseContext.createSession databaseContext
    
    { blockNumber = 0u; blockHash = Hash.zero}
    |> DataAccess.Tip.put dataAccess session
    
    let block:Block =
        {
            header =
                {
                    version     = Version0
                    parent      = Hash.zero
                    blockNumber = 1u
                    difficulty  = difficulty
                    commitments = Hash.zero
                    timestamp   = 1UL
                    nonce       = (0UL, 0UL)
                }
            txMerkleRoot                = Hash.zero
            witnessMerkleRoot           = Hash.zero
            activeContractSetMerkleRoot = Hash.zero
            commitments                 = []
            transactions                = [RpayoutTx]//allocationTx1;allocationTx2DATAString]
        }
    let blockHash = Block.hash block.header

    Repository.addBlock dataAccess session chainParams blockHash block
